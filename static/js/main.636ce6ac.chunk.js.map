{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","toFixed","FeedbackOptions","options","onLeaveFeedback","className","map","btn","type","onClick","Section","title","children","Notification","message","App","state","handlerStatistics","e","feedback","currentTarget","dataset","console","log","setState","prevState","this","countTotalFeedback","Object","values","reduce","value","countPositiveFeedbackPercentage","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAYeA,MAZf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAmBC,QAAQ,GAAnD,WCYSC,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKC,UAAU,OAAf,SACGF,EAAQG,KAAI,SAACC,GACZ,OACE,wBAEEC,KAAK,SACL,gBAAeD,EACfE,QAASL,EAJX,SAMGG,GALIA,SCGFG,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,qCACGD,GAAS,6BAAKA,IACdC,MCAQC,MAJf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCKPC,E,4MACJC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,kBAAoB,SAACC,GACnB,IAAQC,EAAaD,EAAEE,cAAcC,QAA7BF,SACRG,QAAQC,IAAIJ,GAEZ,EAAKK,UAAS,SAACC,GAAD,sBACXN,EAAWM,EAAUN,GAAY,O,4CAItC,WACE,IAAQH,EAA6BU,KAA7BV,MAAOC,EAAsBS,KAAtBT,kBACPrB,EAAuBoB,EAAvBpB,KAAMC,EAAiBmB,EAAjBnB,QAASC,EAAQkB,EAARlB,IAEjB6B,EAAqBC,OAAOC,OAAOb,GAAOc,QAC9C,SAAC/B,EAAOgC,GAAR,OAAmBhC,EAASgC,IAC5B,GAGIC,EAA0C,IAAPpC,EAAc+B,EAEvD,OACE,qCACE,cAAC,EAAD,CAAShB,MAAM,uBAAf,SACE,cAAC,EAAD,CACER,QAASyB,OAAOK,KAAKjB,GACrBZ,gBAAiBa,MAIrB,cAAC,EAAD,CAASN,MAAM,aAAf,SAC0B,IAAvBgB,EACC,cAAC,EAAD,CAAcb,QAAQ,sBAEtB,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,EACP3B,mBAAoBgC,a,GA7ChBE,aAsDHnB,ICxDfoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.636ce6ac.chunk.js","sourcesContent":["function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage.toFixed(0)}%</li>\n    </ul>\n  );\n}\n\nexport default Statistics;\n","function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className=\"flex\">\n      {options.map((btn) => {\n        return (\n          <button\n            key={btn}\n            type=\"button\"\n            data-feedback={btn}\n            onClick={onLeaveFeedback}\n          >\n            {btn}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n","function Section({ title, children }) {\n  return (\n    <>\n      {title && <h2>{title}</h2>}\n      {children}\n    </>\n  );\n}\n\nexport default Section;\n","function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handlerStatistics = (e) => {\n    const { feedback } = e.currentTarget.dataset;\n    console.log(feedback);\n\n    this.setState((prevState) => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  render() {\n    const { state, handlerStatistics } = this;\n    const { good, neutral, bad } = state;\n\n    const countTotalFeedback = Object.values(state).reduce(\n      (total, value) => (total += value),\n      0\n    );\n\n    const countPositiveFeedbackPercentage = (good * 100) / countTotalFeedback;\n\n    return (\n      <>\n        <Section title=\"Pleas leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(state)}\n            onLeaveFeedback={handlerStatistics}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}